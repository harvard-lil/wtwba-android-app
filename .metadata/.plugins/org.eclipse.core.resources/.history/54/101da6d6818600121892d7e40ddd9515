package edu.harvad.law.librarylab.wtwba;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.widget.TextView;


public class DisplayItemDetailsActivity extends Activity {
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        
        Bundle bundle = getIntent().getExtras();
        String barcode = bundle.getString("barcode");
        
     // Gets the URL from the UI's text field.
        ConnectivityManager connMgr = (ConnectivityManager) 
        getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();
        if (networkInfo != null && networkInfo.isConnected()) {
            new DownloadHtmlTask().execute(barcode);
            
DatabaseHandler db = new DatabaseHandler(this);
            
            /**
             * CRUD Operations
             * */
            // Inserting Contacts
            Log.d("Insert: ", "Inserting ..");
            db.add_entry(new Entry("junkbarcode", "junklocation"));
        } else {
            //textView.setText("No network connection available.");
        }
        
    }
	
	
	// Implementation of AsyncTask used to download XML feed from stackoverflow.com.
    private class DownloadHtmlTask extends AsyncTask<U, Void, String> {

        @Override
        protected String doInBackground(String... barcode) {
            try {

            	String targetURL = "http://librarylab.law.harvard.edu/dev/matt/public/wtwba/add.php";
            	String urlParameters = null;
            	
            	try {
        			urlParameters = "user=" + URLEncoder.encode("mattphillips", "UTF-8") +
        							"&barcode=" + URLEncoder.encode(barcode[0], "UTF-8");
        		} catch (UnsupportedEncodingException e1) {
        			e1.printStackTrace();
        		}
            	
            	Log.w("wtwba", urlParameters);
            	
            	return excutePost(targetURL, urlParameters);
            } catch (Exception e) {
            	Log.w("wtwba", e.getMessage());
                return getResources().getString(R.string.connection_error);
            }
        }

        @Override
        protected void onPostExecute(String result) {
            setContentView(R.layout.activity_item_details);
            
            String title = null;
            String due_date = null;
            
            try {
				JSONObject myjson = new JSONObject(result);
				title = myjson.getString("title");
				due_date = myjson.getString("due");
				
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
            TextView text_title = (TextView) findViewById(R.id.title_details);
            text_title.setText(title);
            
            TextView text_due_date = (TextView) findViewById(R.id.due_details);
            text_due_date.setText(due_date);
        }
        
        
        // Thanks http://www.xyzws.com/Javafaq/how-to-use-httpurlconnection-post-data-to-web-server/139
        public String excutePost(String targetURL, String urlParameters)
        {
          URL url;
          HttpURLConnection connection = null;
          
          try {
            //Create connection
            url = new URL(targetURL);
            connection = (HttpURLConnection)url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", 
                 "application/x-www-form-urlencoded");
      			
            connection.setRequestProperty("Content-Length", "" + 
                     Integer.toString(urlParameters.getBytes().length));
            connection.setRequestProperty("Content-Language", "en-US");  
      			
            connection.setUseCaches (false);
            connection.setDoInput(true);
            connection.setDoOutput(true);

            //Send request
            DataOutputStream wr = new DataOutputStream (
                        connection.getOutputStream ());
            wr.writeBytes (urlParameters);
            wr.flush ();
            wr.close ();

            //Get Response	
            InputStream is = connection.getInputStream();
            BufferedReader rd = new BufferedReader(new InputStreamReader(is));
            String line;
            StringBuffer response = new StringBuffer(); 
            while((line = rd.readLine()) != null) {
              response.append(line);
              response.append('\r');
            }
            rd.close();
            
            Log.w("wtwba", response.toString());
            return response.toString();

          } catch (Exception e) {

            e.printStackTrace();
            return null;

          } finally {

            if(connection != null) {
              connection.disconnect(); 
            }
          }
        }
        
        
    }
    
    
}